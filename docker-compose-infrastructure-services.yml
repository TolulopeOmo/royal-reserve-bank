version: "3.8"
services:
  account-api-mongo:
    image: mongo:6.0.5
    container_name: account-api-mongo
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./data/account-api-mongo:/data/mongo

  asset-management-api-mysql:
    container_name: asset-management-api-mysql
    image: mysql:8.0.33
    ports:
      - "3306:3306"
    expose:
      - "3306"
    environment:
      MYSQL_DATABASE: mysql
      MYSQL_USER: admin
      MYSQL_PASSWORD: pwd
      MYSQL_ROOT_PASSWORD: pwd
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./data/asset-management-api-mysql:/data/mysql

  elasticsearch:
    image: elasticsearch:8.7.1
    container_name: elasticsearch
    ports:
      - "9200:9200"
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    environment:
      ELASTIC_USERNAME: elastic
      ELASTIC_PASSWORD: password
      ES_JAVA_OPTS: -Xmx256m -Xms256m
      discovery.type: single-node
    #note: ../../../usr/share/elasticsearch/bin/elasticsearch-create-enrollment-token --scope kibana

  kibana:
    image: kibana:8.7.1
    container_name: kibana
    ports:
      - "5601:5601"
    volumes:
      - ./data/kibana/config:/usr/share/kibana/config
      - ./data/kibana/data:/usr/share/kibana/data
#    environment:
#      ELASTICSEARCH_HOSTS: http://elasticsearch:9200

  logstash:
    image: logstash:8.7.1
    container_name: logstash
    volumes:
      - ./logstash.conf:/pipeline/logstash.conf
      - ./data/logstash:/usr/share/logstash/data
    ports:
      - "5000:5000"
    environment:
      XPACK_MONITORING_ENABLED: false

#  logstash:
#    image: logstash:8.7.1
#    container_name: logstash
#    ports:
#      - "5000:5000/tcp"
#      - "5000:5000/udp"
#      - "9600:9600"
#    environment:
#      LS_JAVA_OPTS: "-Xmx256m -Xms256m"

  notification-api-kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: notification-api-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_NODE_ID: 1
      CLUSTER_ID: MkU3OEVANTcwNTJENDM2Qk
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://notification-api-kafka:29092,HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://notification-api-kafka:29092,CONTROLLER://notification-api-kafka:29093,HOST://0.0.0.0:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@notification-api-kafka:29093

  transaction-api-postgres:
    image: postgres:15.2
    container_name: transaction-api-postgres
    ports:
      - "5432:5432"
    expose:
      - "5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: root
      POSTGRES_PASSWORD: admin
    volumes:
      - ./data/transaction-api-postgres:/data/postgres

  zipkin:
    image: openzipkin/zipkin:2.24.0
    container_name: zipkin
    ports:
      - "9411:9411"

#    networks:
#      - elk

#networks:
#  elk:
#    driver: bridge

#volumes:
#  elasticsearch: